[{
  "history_id" : "sw6phlspqli",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1721364488173,
  "history_end_time" : 1721364488173,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Skipped"
},{
  "history_id" : "0viwagrd428",
  "history_input" : "No code saved",
  "history_output" : "Skipped",
  "history_begin_time" : 1721133289767,
  "history_end_time" : 1721156176103,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "8epjgc8z2l3",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n#     feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n#  'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n#  'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n#  'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n#  'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n#  'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n#  'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago',\n#  'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n\n    feature_names = ['LAT', 'LON', 'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n\n# ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n# > 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n# > 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n# > 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n# > 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n# > 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use',\n# > 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n# > 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n# > 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n# > 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n# > 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n# > 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n# > 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n# > 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago',\n# > 'Predicted_FRP']\n\n#     [\n# #       'LAT', ' LON', \n#       'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n#  'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n#  'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n#  'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n#  'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n#  'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n#  'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n#  'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n#  'Nearest_23', 'Nearest_24']\n    \n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 12))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['LAT', 'LON', 'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT', 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago', 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago', 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago', 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago', 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago', 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago', 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n[ 59  46  57  66  29  24  51  42  62  17  15  22  27  29 182  23 148  35\n 178  45 161  20  50  21  19  24  36  16  25  30  56  18  16  20  22  19\n  13  31  62  36  26  45  17  29  26  35  20  16 250  47  24  18  78  22\n  24  20  38  18  20  24  40  23  23  27  42  12  21  20  49  30  19  11\n  34]\nnew_png_path =  /groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_fc_lightgbm_model_v2_latest.pkl.png\n",
  "history_begin_time" : 1718636827332,
  "history_end_time" : 1718636837958,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "lbewv5rsxdd",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n#     feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n#  'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n#  'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n#  'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n#  'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n#  'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n#  'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago',\n#  'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n\n    feature_names = ['LAT', 'LON', 'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n\n# ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n# > 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n# > 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n# > 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n# > 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n# > 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use',\n# > 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n# > 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n# > 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n# > 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n# > 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n# > 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n# > 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n# > 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago',\n# > 'Predicted_FRP']\n\n#     [\n# #       'LAT', ' LON', \n#       'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n#  'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n#  'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n#  'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n#  'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n#  'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n#  'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n#  'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n#  'Nearest_23', 'Nearest_24']\n    \n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 12))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['LAT', 'LON', 'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT', 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago', 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago', 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago', 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago', 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago', 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago', 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n[ 59  46  57  66  29  24  51  42  62  17  15  22  27  29 182  23 148  35\n 178  45 161  20  50  21  19  24  36  16  25  30  56  18  16  20  22  19\n  13  31  62  36  26  45  17  29  26  35  20  16 250  47  24  18  78  22\n  24  20  38  18  20  24  40  23  23  27  42  12  21  20  49  30  19  11\n  34]\nnew_png_path =  /groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_fc_lightgbm_model_v2_latest.pkl.png\n",
  "history_begin_time" : 1718636746441,
  "history_end_time" : 1718636753823,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "4evyk7lui3e",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n#     feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n#  'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n#  'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n#  'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n#  'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n#  'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n#  'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago',\n#  'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n\n    feature_names = ['LAT', 'LON', 'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n\n# ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n# > 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n# > 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n# > 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n# > 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n# > 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use',\n# > 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n# > 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n# > 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n# > 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n# > 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n# > 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n# > 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n# > 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago',\n# > 'Predicted_FRP']\n\n#     [\n# #       'LAT', ' LON', \n#       'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n#  'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n#  'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n#  'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n#  'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n#  'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n#  'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n#  'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n#  'Nearest_23', 'Nearest_24']\n    \n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 12))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['LAT', 'LON', 'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT', 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago', 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago', 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago', 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago', 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago', 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago', 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n[ 59  46  57  66  29  24  51  42  62  17  15  22  27  29 182  23 148  35\n 178  45 161  20  50  21  19  24  36  16  25  30  56  18  16  20  22  19\n  13  31  62  36  26  45  17  29  26  35  20  16 250  47  24  18  78  22\n  24  20  38  18  20  24  40  23  23  27  42  12  21  20  49  30  19  11\n  34]\nnew_png_path =  /groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_fc_lightgbm_model_v2_latest.pkl.png\n",
  "history_begin_time" : 1718636566417,
  "history_end_time" : 1718636573840,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "0J7t2aqyiFyS",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n#     feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n#  'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n#  'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n#  'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n#  'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n#  'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n#  'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago',\n#  'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n\n    feature_names = ['LAT', 'LON', 'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n\n# ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n# > 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n# > 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n# > 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n# > 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n# > 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use',\n# > 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n# > 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n# > 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n# > 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n# > 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n# > 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n# > 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n# > 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago',\n# > 'Predicted_FRP']\n\n#     [\n# #       'LAT', ' LON', \n#       'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n#  'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n#  'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n#  'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n#  'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n#  'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n#  'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n#  'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n#  'Nearest_23', 'Nearest_24']\n    \n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 12))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['LAT', 'LON', 'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT', 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago', 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago', 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago', 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago', 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago', 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago', 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n[ 59  46  57  66  29  24  51  42  62  17  15  22  27  29 182  23 148  35\n 178  45 161  20  50  21  19  24  36  16  25  30  56  18  16  20  22  19\n  13  31  62  36  26  45  17  29  26  35  20  16 250  47  24  18  78  22\n  24  20  38  18  20  24  40  23  23  27  42  12  21  20  49  30  19  11\n  34]\nnew_png_path =  /groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_fc_lightgbm_model_v2_latest.pkl.png\n",
  "history_begin_time" : 1718636524861,
  "history_end_time" : 1718636537704,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "vx85godddms",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n#     feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n#  'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n#  'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n#  'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n#  'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n#  'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n#  'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago',\n#  'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n\n    feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n\n# ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n# > 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n# > 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n# > 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n# > 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n# > 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use',\n# > 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n# > 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n# > 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n# > 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n# > 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n# > 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n# > 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n# > 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago',\n# > 'Predicted_FRP']\n\n#     [\n# #       'LAT', ' LON', \n#       'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n#  'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n#  'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n#  'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n#  'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n#  'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n#  'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n#  'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n#  'Nearest_23', 'Nearest_24']\n    \n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 12))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT', 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago', 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago', 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago', 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago', 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago', 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago', 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n[ 66  60  34  34  56  49  58  19  17  34  31  30 172  27 151  27 173  37\n 154  20  55  19  15  22  40  15  20  34  56  27  28  16  27  26  14  22\n  65  42  32  37  26  25  17  46  35  17 260  41  23  19  82  24  29  17\n  37  23  25  19  38  26  23  22  36  12  24  24  45  36  25  24  39]\nnew_png_path =  /groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_fc_lightgbm_model_v2_latest.pkl.png\n",
  "history_begin_time" : 1717260627232,
  "history_end_time" : 1717260636947,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "25Ed10yAOB3a",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n#     feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n#  'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n#  'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n#  'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n#  'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n#  'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n#  'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago',\n#  'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n\n    feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n\n# ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n# > 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n# > 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n# > 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n# > 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n# > 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use',\n# > 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT',\n# > 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n# > 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n# > 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n# > 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n# > 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n# > 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n# > 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago',\n# > 'Predicted_FRP']\n\n#     [\n# #       'LAT', ' LON', \n#       'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n#  'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n#  'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n#  'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n#  'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n#  'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n#  'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n#  'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n#  'Nearest_23', 'Nearest_24']\n    \n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 12))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'Land_Use', 'VCI_AVE', 'TCI_AVE', 'VHI_AVE', 'VCI_TOT', 'TCI_TOT', 'VHI_TOT', 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago', 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago', 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago', 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago', 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago', 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago', 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n[ 66  60  34  34  56  49  58  19  17  34  31  30 172  27 151  27 173  37\n 154  20  55  19  15  22  40  15  20  34  56  27  28  16  27  26  14  22\n  65  42  32  37  26  25  17  46  35  17 260  41  23  19  82  24  29  17\n  37  23  25  19  38  26  23  22  36  12  24  24  45  36  25  24  39]\nnew_png_path =  /groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_fc_lightgbm_model_v2_latest.pkl.png\n",
  "history_begin_time" : 1717258625616,
  "history_end_time" : 1717258632107,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "85dghpfeu90",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n#     feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n#  'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n#  'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n#  'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n#  'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n#  'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n#  'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago',\n#  'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n\n    feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n\n#     [\n# #       'LAT', ' LON', \n#       'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n#  'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n#  'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n#  'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n#  'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n#  'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n#  'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n#  'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n#  'Nearest_23', 'Nearest_24']\n    \n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago', 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago', 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago', 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago', 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago', 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago', 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n[ 66  60  34  34  56  49  58  19  17  34  31  30 172  27 151  27 173  37\n 154  20  55  19  15  22  40  15  20  34  56  27  28  16  27  26  14  22\n  65  42  32  37  26  25  17  46  35  17 260  41  23  19  82  24  29  17\n  37  23  25  19  38  26  23  22  36  12  24  24  45  36  25  24  39]\nTraceback (most recent call last):\n  File \"explain_model_results.py\", line 88, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 77, in plot_feature_importance\n    plt.barh(feature_names, feature_importances)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/pyplot.py\", line 2502, in barh\n    return gca().barh(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py\", line 2630, in barh\n    patches = self.bar(x=left, height=height, width=width, bottom=y,\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/__init__.py\", line 1438, in inner\n    return func(ax, *map(sanitize_sequence, args), **kwargs)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py\", line 2430, in bar\n    x, height, width, y, linewidth = np.broadcast_arrays(\n  File \"<__array_function__ internals>\", line 180, in broadcast_arrays\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py\", line 539, in broadcast_arrays\n    shape = _broadcast_shape(*args)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py\", line 421, in _broadcast_shape\n    b = np.broadcast(*args[:32])\nValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 2 with shape (71,) and arg 3 with shape (64,).\n",
  "history_begin_time" : 1717258418326,
  "history_end_time" : 1717260624659,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "Si6nOWvESwBc",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n#     feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n#  'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n#  'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n#  'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n#  'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n#  'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n#  'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago',\n#  'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n\n    feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago',\n'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago',\n'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago',\n'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago',\n'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago',\n'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago',\n'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n\n#     [\n# #       'LAT', ' LON', \n#       'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n#  'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n#  'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n#  'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n#  'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n#  'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n#  'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n#  'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n#  'Nearest_23', 'Nearest_24']\n    \n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'FWI_1_days_ago', 'VPD_1_days_ago', 'P_1_days_ago', 'FRP_1_days_ago', 'FWI_2_days_ago', 'VPD_2_days_ago', 'P_2_days_ago', 'FRP_2_days_ago', 'FWI_3_days_ago', 'VPD_3_days_ago', 'P_3_days_ago', 'FRP_3_days_ago', 'FWI_4_days_ago', 'VPD_4_days_ago', 'P_4_days_ago', 'FRP_4_days_ago', 'FWI_5_days_ago', 'VPD_5_days_ago', 'P_5_days_ago', 'FRP_5_days_ago', 'FWI_6_days_ago', 'VPD_6_days_ago', 'P_6_days_ago', 'FRP_6_days_ago', 'FWI_7_days_ago', 'VPD_7_days_ago', 'P_7_days_ago', 'FRP_7_days_ago']\n[ 62  63  48  42  53  56  70  20  18  29  34  39 178  27 165  34 179  50\n 172  20  48  35  17  25  42  23  21  37  60  26  22  23  30  26  25  34\n  49  28  22 262  44  27  26  75  27  35  27  39  21  30  22  34  35  29\n  19  45  22  25  13  50  34  34  27  46]\nnew_png_path =  /groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_fc_lightgbm_model_v1_latest.pkl.png\n",
  "history_begin_time" : 1716120823180,
  "history_end_time" : 1716120826923,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "6943ayategr",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n 'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago',\n 'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n#     [\n# #       'LAT', ' LON', \n#       'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n#  'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n#  'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n#  'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n#  'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n#  'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n#  'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n#  'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n#  'Nearest_23', 'Nearest_24']\n    \n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n[ 62  63  48  42  53  56  70  20  18  29  34  39 178  27 165  34 179  50\n 172  20  48  35  17  25  42  23  21  37  60  26  22  23  30  26  25  34\n  49  28  22 262  44  27  26  75  27  35  27  39  21  30  22  34  35  29\n  19  45  22  25  13  50  34  34  27  46]\nTraceback (most recent call last):\n  File \"explain_model_results.py\", line 73, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 62, in plot_feature_importance\n    plt.barh(feature_names, feature_importances)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/pyplot.py\", line 2502, in barh\n    return gca().barh(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py\", line 2630, in barh\n    patches = self.bar(x=left, height=height, width=width, bottom=y,\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/__init__.py\", line 1438, in inner\n    return func(ax, *map(sanitize_sequence, args), **kwargs)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py\", line 2430, in bar\n    x, height, width, y, linewidth = np.broadcast_arrays(\n  File \"<__array_function__ internals>\", line 180, in broadcast_arrays\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py\", line 539, in broadcast_arrays\n    shape = _broadcast_shape(*args)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py\", line 421, in _broadcast_shape\n    b = np.broadcast(*args[:32])\nValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 2 with shape (64,) and arg 3 with shape (43,).\n",
  "history_begin_time" : 1716120711177,
  "history_end_time" : 1716610159514,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "T0erUBi9MZZ9",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST',\n 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5',\n 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10',\n 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15',\n 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20',\n 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24',\n 'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago',\n 'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n#     [\n# #       'LAT', ' LON', \n#       'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n#  'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n#  'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n#  'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n#  'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n#  'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n#  'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n#  'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n#  'Nearest_23', 'Nearest_24']\n    \n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24', 'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago']\n[111 105  68  81  68  90  78 135  22  36  66  76 185  40 181  42 188  62\n 189  38  65  36  22  22  48  28  29  33  61  38  27  23  37  31  23  42\n 248  94  52  40  44  54  42]\nnew_png_path =  /groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_fc_lightgbm_model_v1_latest.pkl.png\n",
  "history_begin_time" : 1715974736827,
  "history_end_time" : 1715974741222,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "jBVX81hlFqno",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n 'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n 'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n 'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    new_png_path = f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png'\n    plt.savefig(new_png_path)\n    print(\"new_png_path = \", new_png_path)\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[111 105  68  81  68  90  78 135  22  36  66  76 185  40 181  42 188  62\n 189  38  65  36  22  22  48  28  29  33  61  38  27  23  37  31  23  42\n 248  94  52  40  44  54  42]\nnew_png_path =  /groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_fc_lightgbm_model_v1_latest.pkl.png\n",
  "history_begin_time" : 1715974437657,
  "history_end_time" : 1715974441711,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "TfTCf2g0dnge",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      'FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P',\n 'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago',\n 'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago',\n 'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n['FWI', 'VPD', 'HT', 'T', 'RH', 'U', 'V', 'P', 'RAIN', 'CAPE', 'ST', 'SM', 'FRP_1_days_ago', 'FRP_2_days_ago', 'FRP_3_days_ago', 'FRP_4_days_ago', 'FRP_5_days_ago', 'FRP_6_days_ago', 'FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[111 105  68  81  68  90  78 135  22  36  66  76 185  40 181  42 188  62\n 189  38  65  36  22  22  48  28  29  33  61  38  27  23  37  31  23  42\n 248  94  52  40  44  54  42]\n",
  "history_begin_time" : 1715974334593,
  "history_end_time" : 1715974342652,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "ixWAKopgpLfA",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n[' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[111 105  68  81  68  90  78 135  22  36  66  76 185  40 181  42 188  62\n 189  38  65  36  22  22  48  28  29  33  61  38  27  23  37  31  23  42\n 248  94  52  40  44  54  42]\n",
  "history_begin_time" : 1715283068997,
  "history_end_time" : 1715283077713,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "m341afjqhji",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n[' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[186 151 143  83 129 113 159 151  23  75 132 126 358 124  61  61  54  39\n  46  69  78  64  75  39  37  47  38  18  29  38  23   9  18  22  29  19\n  20  21  24  30   9  13  17]\n",
  "history_begin_time" : 1714197829662,
  "history_end_time" : 1714197837589,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "lf79l5p7knw",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n[' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[186 151 143  83 129 113 159 151  23  75 132 126 358 124  61  61  54  39\n  46  69  78  64  75  39  37  47  38  18  29  38  23   9  18  22  29  19\n  20  21  24  30   9  13  17]\n",
  "history_begin_time" : 1713968345686,
  "history_end_time" : 1713968352585,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "6y5xv9vjug1",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Int64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.Float64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n/home/zsun/anaconda3/lib/python3.8/site-packages/dask/dataframe/utils.py:367: FutureWarning: pandas.UInt64Index is deprecated and will be removed from pandas in a future version. Use pandas.Index with the appropriate dtype instead.\n  _numeric_index_types = (pd.Int64Index, pd.Float64Index, pd.UInt64Index)\n[' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[186 151 143  83 129 113 159 151  23  75 132 126 358 124  61  61  54  39\n  46  69  78  64  75  39  37  47  38  18  29  38  23   9  18  22  29  19\n  20  21  24  30   9  13  17]\n",
  "history_begin_time" : 1713937917213,
  "history_end_time" : 1713937924234,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "wg0bwqdwjvk",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "[' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[0.01437724 0.02104696 0.02533676 0.03626653 0.03506615 0.03048977\n 0.02074175 0.02723226 0.00543232 0.02470401 0.04609315 0.02877827\n 0.04732126 0.01565095 0.0090276  0.00637199 0.0040631  0.00515436\n 0.00967002 0.0249844  0.01609165 0.01559902 0.00939693 0.03306102\n 0.02403658 0.02012634 0.01406942 0.01734121 0.02028953 0.03030797\n 0.03622767 0.01820673 0.01501514 0.01400734 0.0713059  0.06184476\n 0.00937655 0.03352852 0.00903145 0.01003745 0.01182142 0.01842807\n 0.05304047]\n",
  "history_begin_time" : 1712454431269,
  "history_end_time" : 1712454437589,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "7pgezc5kry8",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "[' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[0.01437724 0.02104696 0.02533676 0.03626653 0.03506615 0.03048977\n 0.02074175 0.02723226 0.00543232 0.02470401 0.04609315 0.02877827\n 0.04732126 0.01565095 0.0090276  0.00637199 0.0040631  0.00515436\n 0.00967002 0.0249844  0.01609165 0.01559902 0.00939693 0.03306102\n 0.02403658 0.02012634 0.01406942 0.01734121 0.02028953 0.03030797\n 0.03622767 0.01820673 0.01501514 0.01400734 0.0713059  0.06184476\n 0.00937655 0.03352852 0.00903145 0.01003745 0.01182142 0.01842807\n 0.05304047]\n",
  "history_begin_time" : 1712452313748,
  "history_end_time" : 1712452320028,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "2b5nvpj26mq",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "[' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[0.01437724 0.02104696 0.02533676 0.03626653 0.03506615 0.03048977\n 0.02074175 0.02723226 0.00543232 0.02470401 0.04609315 0.02877827\n 0.04732126 0.01565095 0.0090276  0.00637199 0.0040631  0.00515436\n 0.00967002 0.0249844  0.01609165 0.01559902 0.00939693 0.03306102\n 0.02403658 0.02012634 0.01406942 0.01734121 0.02028953 0.03030797\n 0.03622767 0.01820673 0.01501514 0.01400734 0.0713059  0.06184476\n 0.00937655 0.03352852 0.00903145 0.01003745 0.01182142 0.01842807\n 0.05304047]\n",
  "history_begin_time" : 1712452012061,
  "history_end_time" : 1712452018584,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "6bbSIMJ0rQwt",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "[' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[0.0053971  0.00683842 0.01432001 0.00815998 0.01133903 0.0127235\n 0.00769363 0.013158   0.00254998 0.00415243 0.01053653 0.01294556\n 0.0153399  0.01461163 0.02190736 0.02072134 0.02107562 0.02513855\n 0.0256331  0.01726282 0.02337221 0.03471832 0.02077728 0.04428958\n 0.03022641 0.03262065 0.04244868 0.03543261 0.03121243 0.03248282\n 0.02801834 0.03239841 0.04958018 0.03100743 0.06418613 0.02337566\n 0.02520643 0.02114209 0.02562226 0.02091113 0.02103129 0.03583089\n 0.02260426]\n",
  "history_begin_time" : 1711768339418,
  "history_end_time" : 1711768343420,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "yvju2reh9wa",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "[' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[0.00086116 0.00378501 0.00465507 0.00230904 0.01108513 0.01041075\n 0.00316434 0.02629457 0.00053473 0.003018   0.00836816 0.00622641\n 0.01318425 0.00528493 0.00672572 0.00534616 0.01201847 0.00613806\n 0.0031387  0.03672648 0.01461183 0.17463887 0.0103421  0.04741947\n 0.04767229 0.0279495  0.01732016 0.00473692 0.02472806 0.00564646\n 0.07463791 0.00669447 0.02772558 0.02584945 0.00987434 0.13381904\n 0.02284577 0.01958786 0.04483584 0.02426766 0.01567521 0.04068799\n 0.00915824]\n",
  "history_begin_time" : 1711144125478,
  "history_end_time" : 1711144133425,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Done"
},{
  "history_id" : "nT4c5ihJB3yd",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = [\n#       'LAT', ' LON', \n      ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "[' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n",
  "history_begin_time" : 1709431647062,
  "history_end_time" : 1709431650106,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "1ilUNXzo0fqz",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.\n 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\nTraceback (most recent call last):\n  File \"explain_model_results.py\", line 60, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 51, in plot_feature_importance\n    plt.barh(feature_names, feature_importances)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/pyplot.py\", line 2502, in barh\n    return gca().barh(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py\", line 2630, in barh\n    patches = self.bar(x=left, height=height, width=width, bottom=y,\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/__init__.py\", line 1438, in inner\n    return func(ax, *map(sanitize_sequence, args), **kwargs)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py\", line 2430, in bar\n    x, height, width, y, linewidth = np.broadcast_arrays(\n  File \"<__array_function__ internals>\", line 180, in broadcast_arrays\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py\", line 539, in broadcast_arrays\n    shape = _broadcast_shape(*args)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py\", line 421, in _broadcast_shape\n    b = np.broadcast(*args[:32])\nValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 2 with shape (43,) and arg 3 with shape (45,).\n",
  "history_begin_time" : 1709430488841,
  "history_end_time" : 1709430496037,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "74KkMQpunMVZ",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[3.5052537e-03 2.8630998e-02 3.1031225e-02 2.2899965e-02 3.2780800e-02\n 6.1460533e-03 8.1632271e-02 1.0225520e-02 1.1037091e-02 3.2677237e-02\n 1.2823767e-03 9.4427320e-04 2.5130236e-03 2.1413200e-02 2.1787284e-01\n 7.6436087e-02 6.9544613e-02 1.4139181e-02 4.6937834e-04 4.8391442e-04\n 2.8181737e-04 7.6954864e-02 1.4469288e-02 1.6164865e-02 7.2019026e-02\n 1.0574697e-02 6.1462305e-02 4.2853011e-03 8.0335105e-04 1.2648309e-03\n 1.0155913e-03 2.7793578e-03 3.7374056e-04 6.2458906e-03 9.8196254e-04\n 7.2688842e-04 2.8628966e-02 4.1173208e-03 2.6676059e-02 8.7812904e-04\n 4.2236254e-05 8.8915264e-04 1.9157128e-04 5.1101594e-04 1.9965563e-03]\n",
  "history_begin_time" : 1705818880783,
  "history_end_time" : 1705818883773,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "TjMyheIpCzpJ",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\nfrom fc_model_creation import model_path\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n#model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P',\n ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago',\n ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago',\n ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2',\n 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7',\n 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12',\n 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17',\n 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22',\n 'Nearest_23', 'Nearest_24']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \n    \nif __name__ == \"__main__\":\n    plot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_1_days_ago', ' FRP_2_days_ago', ' FRP_3_days_ago', ' FRP_4_days_ago', ' FRP_5_days_ago', ' FRP_6_days_ago', ' FRP_7_days_ago', 'Nearest_1', 'Nearest_2', 'Nearest_3', 'Nearest_4', 'Nearest_5', 'Nearest_6', 'Nearest_7', 'Nearest_8', 'Nearest_9', 'Nearest_10', 'Nearest_11', 'Nearest_12', 'Nearest_13', 'Nearest_14', 'Nearest_15', 'Nearest_16', 'Nearest_17', 'Nearest_18', 'Nearest_19', 'Nearest_20', 'Nearest_21', 'Nearest_22', 'Nearest_23', 'Nearest_24']\n[2.3965929e-02 5.6759141e-02 1.5124576e-01 2.1161987e-02 4.1656937e-03\n 6.2450767e-03 4.6594102e-02 5.5987038e-02 1.4371130e-02 1.3905630e-02\n 7.7668368e-04 6.6439337e-03 3.7615097e-03 4.7924183e-03 1.0887643e-01\n 2.9772965e-02 1.9999389e-02 2.2016403e-03 7.2020977e-03 2.6049691e-03\n 1.9539164e-03 1.1333521e-01 3.0684115e-02 9.9460138e-03 6.5358676e-02\n 5.2022394e-02 6.3740443e-03 2.8387930e-03 2.4967948e-03 1.0507378e-03\n 2.0909111e-03 1.2671885e-03 5.9065205e-04 8.5441042e-03 9.9989097e-04\n 1.4265937e-03 2.5722592e-03 1.1124525e-02 6.1261334e-04 9.4852199e-05\n 4.0808137e-04 6.1065145e-03 2.0383308e-05 9.7038850e-02 8.2961960e-06]\n",
  "history_begin_time" : 1705763189571,
  "history_end_time" : 1705763194880,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "AIFmlNg01fU9",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\nmodel_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_5_days_2020_maxdepth_8_linear_weights_100_slurm_test.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V',\n' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1',\n' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \nplot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1', ' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n[6.4910087e-03 7.2967587e-03 1.8345851e-02 7.0824012e-02 3.0428149e-02\n 3.0416835e-03 1.9556209e-02 9.0589151e-03 6.9443430e-03 4.1614529e-02\n 2.5364731e-03 1.7313263e-03 2.1064719e-03 6.4666290e-03 3.1009564e-02\n 1.7332643e-02 3.3315685e-02 2.7108078e-03 9.2531824e-03 2.6337671e-04\n 2.2019034e-03 7.7597387e-02 1.7622557e-02 5.6199107e-02 5.2498309e-03\n 2.9724209e-02 1.7544588e-03 1.5327827e-02 7.3907189e-02 3.4364508e-05\n 2.3373828e-10 4.9501215e-04 5.5058605e-05 7.2723727e-05 1.3182561e-03\n 6.1159784e-07 0.0000000e+00 1.2457424e-08 4.5126394e-06 2.9884316e-07\n 1.4341578e-10 9.5399693e-03 1.5103537e-07 3.8854563e-01 2.1173331e-05]\nTraceback (most recent call last):\n  File \"explain_model_results.py\", line 51, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 44, in plot_feature_importance\n    plt.barh(feature_names, feature_importances)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/pyplot.py\", line 2502, in barh\n    return gca().barh(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py\", line 2630, in barh\n    patches = self.bar(x=left, height=height, width=width, bottom=y,\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/__init__.py\", line 1438, in inner\n    return func(ax, *map(sanitize_sequence, args), **kwargs)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py\", line 2430, in bar\n    x, height, width, y, linewidth = np.broadcast_arrays(\n  File \"<__array_function__ internals>\", line 180, in broadcast_arrays\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py\", line 539, in broadcast_arrays\n    shape = _broadcast_shape(*args)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py\", line 421, in _broadcast_shape\n    b = np.broadcast(*args[:32])\nValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 2 with shape (45,) and arg 3 with shape (21,).\n",
  "history_begin_time" : 1701365804608,
  "history_end_time" : 1701365808781,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "xP2rBD7SYQpj",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\nmodel_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_one_month_2020_maxdepth_15_slurm.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V',\n' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1',\n' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/importance_summary_plot_{file_name}.png')\n    \nplot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1', ' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n[0.01813639 0.02542288 0.07444574 0.03865083 0.01597385 0.02174816\n 0.02471281 0.01270039 0.02276895 0.05095525 0.01200245 0.01524231\n 0.03356754 0.02300048 0.28904378 0.09347709 0.16238594 0.01681677\n 0.02153694 0.01385373 0.01355761]\n",
  "history_begin_time" : 1697228400939,
  "history_end_time" : 1697228403910,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Done"
},{
  "history_id" : "AYXly9mqGD8q",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\nmodel_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_one_month_2020_maxdepth_15_slurm.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V',\n' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1',\n' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_path)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/{output_folder_name}/importance_summary_plot_{file_name}.png')\n    \nplot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1', ' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n[0.01813639 0.02542288 0.07444574 0.03865083 0.01597385 0.02174816\n 0.02471281 0.01270039 0.02276895 0.05095525 0.01200245 0.01524231\n 0.03356754 0.02300048 0.28904378 0.09347709 0.16238594 0.01681677\n 0.02153694 0.01385373 0.01355761]\nTraceback (most recent call last):\n  File \"explain_model_results.py\", line 51, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 49, in plot_feature_importance\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/{output_folder_name}/importance_summary_plot_{file_name}.png')\nNameError: name 'output_folder_name' is not defined\n",
  "history_begin_time" : 1697228384121,
  "history_end_time" : 1697228386824,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "hbzoxoT9T4sP",
  "history_input" : "import os\nimport pickle\nimport matplotlib.pyplot as plt\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\nmodel_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_one_month_2020_maxdepth_15_slurm.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V',\n' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1',\n' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_file)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/{output_folder_name}/importance_summary_plot_{file_name}.png')\n    \nplot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1', ' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n[0.01813639 0.02542288 0.07444574 0.03865083 0.01597385 0.02174816\n 0.02471281 0.01270039 0.02276895 0.05095525 0.01200245 0.01524231\n 0.03356754 0.02300048 0.28904378 0.09347709 0.16238594 0.01681677\n 0.02153694 0.01385373 0.01355761]\nTraceback (most recent call last):\n  File \"explain_model_results.py\", line 51, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 48, in plot_feature_importance\n    file_name = os.path.basename(model_file)\n  File \"/home/zsun/anaconda3/lib/python3.8/posixpath.py\", line 142, in basename\n    p = os.fspath(p)\nTypeError: expected str, bytes or os.PathLike object, not _io.BufferedReader\n",
  "history_begin_time" : 1697228351848,
  "history_end_time" : 1697228354828,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "YtmIOequ2UIs",
  "history_input" : "import pickle\nimport matplotlib.pyplot as plt\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\nmodel_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_one_month_2020_maxdepth_15_slurm.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V',\n' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1',\n' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_file)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/{output_folder_name}/importance_summary_plot_{file_name}.png')\n    \nplot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "['LAT', ' LON', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1', ' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n[0.01813639 0.02542288 0.07444574 0.03865083 0.01597385 0.02174816\n 0.02471281 0.01270039 0.02276895 0.05095525 0.01200245 0.01524231\n 0.03356754 0.02300048 0.28904378 0.09347709 0.16238594 0.01681677\n 0.02153694 0.01385373 0.01355761]\nTraceback (most recent call last):\n  File \"explain_model_results.py\", line 50, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 47, in plot_feature_importance\n    file_name = os.path.basename(model_file)\nNameError: name 'os' is not defined\n",
  "history_begin_time" : 1697228336067,
  "history_end_time" : 1697228338915,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "zkEsL7Mm2pCi",
  "history_input" : "import pickle\nimport matplotlib.pyplot as plt\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\nmodel_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_one_month_2020_maxdepth_15_slurm.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['LAT', ' LON', ' FRP', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V',\n' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1',\n' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_file)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/{output_folder_name}/importance_summary_plot_{file_name}.png')\n    \nplot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "['LAT', ' LON', ' FRP', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V', ' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1', ' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n[0.01813639 0.02542288 0.07444574 0.03865083 0.01597385 0.02174816\n 0.02471281 0.01270039 0.02276895 0.05095525 0.01200245 0.01524231\n 0.03356754 0.02300048 0.28904378 0.09347709 0.16238594 0.01681677\n 0.02153694 0.01385373 0.01355761]\nTraceback (most recent call last):\n  File \"explain_model_results.py\", line 50, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 43, in plot_feature_importance\n    plt.barh(feature_names, feature_importances)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/pyplot.py\", line 2502, in barh\n    return gca().barh(\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py\", line 2630, in barh\n    patches = self.bar(x=left, height=height, width=width, bottom=y,\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/__init__.py\", line 1438, in inner\n    return func(ax, *map(sanitize_sequence, args), **kwargs)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/matplotlib/axes/_axes.py\", line 2430, in bar\n    x, height, width, y, linewidth = np.broadcast_arrays(\n  File \"<__array_function__ internals>\", line 180, in broadcast_arrays\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py\", line 539, in broadcast_arrays\n    shape = _broadcast_shape(*args)\n  File \"/home/zsun/anaconda3/lib/python3.8/site-packages/numpy/lib/stride_tricks.py\", line 421, in _broadcast_shape\n    b = np.broadcast(*args[:32])\nValueError: shape mismatch: objects cannot be broadcast to a single shape.  Mismatch is between arg 2 with shape (21,) and arg 3 with shape (22,).\n",
  "history_begin_time" : 1697228290305,
  "history_end_time" : 1697228293670,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "FUrL1sjwf8K8",
  "history_input" : "import pickle\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\nmodel_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_one_month_2020_maxdepth_15_slurm.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = ['LAT', ' LON', ' FRP', ' FWI', ' VPD', ' HT', ' T', ' RH', ' U', ' V',\n' P', ' RAIN', ' CAPE', ' ST', ' SM', ' FRP_day0', ' FRP_day1',\n' FRP_day2', ' FRP_day3', ' FRP_day4', ' FRP_day5', ' FRP_day6']\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_file)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/{output_folder_name}/importance_summary_plot_{file_name}.png')\n    \nplot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "Traceback (most recent call last):\n  File \"explain_model_results.py\", line 49, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 39, in plot_feature_importance\n    plt.figure(figsize=(12, 6))\nNameError: name 'plt' is not defined\n",
  "history_begin_time" : 1697228265912,
  "history_end_time" : 1697228268591,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "MCS0c23wvFdZ",
  "history_input" : "import pickle\n\n# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\nmodel_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_one_month_2020_maxdepth_15_slurm.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = loaded_model.feature_names\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_file)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/{output_folder_name}/importance_summary_plot_{file_name}.png')\n    \nplot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "Traceback (most recent call last):\n  File \"explain_model_results.py\", line 47, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 34, in plot_feature_importance\n    feature_names = loaded_model.feature_names\nAttributeError: 'XGBRegressor' object has no attribute 'feature_names'\n",
  "history_begin_time" : 1697227910600,
  "history_end_time" : 1697227914774,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "IPE6DfhcwU1X",
  "history_input" : "# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\nmodel_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_one_month_2020_maxdepth_15_slurm.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = loaded_model.feature_names\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_file)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/{output_folder_name}/importance_summary_plot_{file_name}.png')\n    \nplot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "Traceback (most recent call last):\n  File \"explain_model_results.py\", line 45, in <module>\n    plot_feature_importance()\n  File \"explain_model_results.py\", line 28, in plot_feature_importance\n    loaded_model = pickle.load(model_file)\nNameError: name 'pickle' is not defined\n",
  "history_begin_time" : 1697227897483,
  "history_end_time" : 1697227897538,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "B5Bo7KSoOasn",
  "history_input" : "# get one prediction and reverse inference the model and get explanation for that prediction\n\n# Explanable AI - SHAP\n\n# target_predict_file = \"/groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_two_months/20210714/firedata_20210714_predicted.txt\"\n\n# model_path=\"/groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_one_month_2020_maxdepth_15_slurm.pkl\"\n\n# # Load the saved model\n# with open(model_path, 'rb') as model_file:\n#   loaded_model = pickle.load(model_file)\n\n# df = pd.read_csv(target_predict_file)\n  \n# X, y = prepare_testing_data_for_2_weeks_forecasting(single_day_current_date_str, date_str, specific_date_result_folder)\n\n# # Make predictions\n# y_pred = loaded_model.predict(X)\n\n# calculate feature importance - indirect evaluation\n\n\n    \ndef plot_feature_importance():\n  \n    # Load the saved model\n    with open(model_path, 'rb') as model_file:\n      loaded_model = pickle.load(model_file)\n    \n    feature_importances = loaded_model.feature_importances_\n    \n    feature_names = loaded_model.feature_names\n\n    # Create a bar plot of feature importances\n    plt.figure(figsize=(12, 6))\n    print(feature_names)\n    print(feature_importances)\n    plt.barh(feature_names, feature_importances)\n    plt.xlabel('Feature Importance')\n    plt.ylabel('Features')\n    plt.title('Feature Importance Plot')\n    file_name = os.path.basename(model_file)\n    plt.savefig(f'/groups/ESS3/zsun/firecasting/data/output/{output_folder_name}/importance_summary_plot_{file_name}.png')\n    \nplot_feature_importance()\n\n# explain why it makes that decision (look into the model itself) - direct evaluation\n\n\n# local explanation \n\n\n# global explanation\n\n\n\n",
  "history_output" : "the model in use is /groups/ESS3/zsun/firecasting/model/fc_xgb_model_v1_weighted_half_month_2020_maxdepth_15_slurm_test.pkl\npredicting:  20210714\nRead from original folder for current date: 20210714\ncurrent_start_dt is: 2021-07-14 00:00:00\nreading past files for 2021-07-13 00:00:00\nreading from original folder\nreading past files for 2021-07-12 00:00:00\nreading from original folder\nreading past files for 2021-07-11 00:00:00\nreading from original folder\nreading past files for 2021-07-10 00:00:00\nreading from original folder\nreading past files for 2021-07-09 00:00:00\nreading from original folder\nreading past files for 2021-07-08 00:00:00\nreading from original folder\nreading past files for 2021-07-07 00:00:00\nreading from original folder\n['Mean Absolute Error (MAE): 9.51684298019396', 'Mean Squared Error (MSE): 987.3930263160263', 'Root Mean Squared Error (RMSE): 31.42281060497336', 'R-squared (R2) Score: -0.3869689401034', 'Explained Variance Score: -0.2753817699337018', 'Mean Squared Log Error (MSLE): 3.9967300506144747', 'Median Absolute Error (MedAE): 0.0', 'Max Error: 5842.833008', 'Mean: 0.31889202218524665', 'Median: 0.0', 'Standard Deviation: 26.681672203030356', 'Minimum: 0.0', 'Maximum: 5842.833008', 'Count: 156861']\nMetrics saved to /groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_one_month_15_layers//20210714/metrics_20210714_predicted.txt\npredicting:  20210715\nRead from original folder for current date: 20210715\ncurrent_start_dt is: 2021-07-14 00:00:00\nreading past files for 2021-07-14 00:00:00\nreading from predicted folder\nreading past files for 2021-07-13 00:00:00\nreading from original folder\nreading past files for 2021-07-12 00:00:00\nreading from original folder\nreading past files for 2021-07-11 00:00:00\nreading from original folder\nreading past files for 2021-07-10 00:00:00\nreading from original folder\nreading past files for 2021-07-09 00:00:00\nreading from original folder\nreading past files for 2021-07-08 00:00:00\nreading from original folder\n['Mean Absolute Error (MAE): 9.522404486343888', 'Mean Squared Error (MSE): 2784.2137880772834', 'Root Mean Squared Error (RMSE): 52.76564969823913', 'R-squared (R2) Score: -0.10598292062926995', 'Explained Variance Score: -0.07619257853266093', 'Mean Squared Log Error (MSLE): 3.924963963142787', 'Median Absolute Error (MedAE): 0.0', 'Max Error: 16156.818359', 'Mean: 0.4527865538215363', 'Median: 0.0', 'Standard Deviation: 50.1739698027898', 'Minimum: 0.0', 'Maximum: 16156.818359', 'Count: 156861']\nMetrics saved to /groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_one_month_15_layers//20210714/metrics_20210715_predicted.txt\npredicting:  20210716\nRead from original folder for current date: 20210716\ncurrent_start_dt is: 2021-07-14 00:00:00\nreading past files for 2021-07-15 00:00:00\nreading from predicted folder\nreading past files for 2021-07-14 00:00:00\nreading from predicted folder\nreading past files for 2021-07-13 00:00:00\nreading from original folder\nreading past files for 2021-07-12 00:00:00\nreading from original folder\nreading past files for 2021-07-11 00:00:00\nreading from original folder\nreading past files for 2021-07-10 00:00:00\nreading from original folder\nreading past files for 2021-07-09 00:00:00\nreading from original folder\n['Mean Absolute Error (MAE): 9.023912418467573', 'Mean Squared Error (MSE): 2530.6736464810842', 'Root Mean Squared Error (RMSE): 50.305801320335654', 'R-squared (R2) Score: -0.11697008533355535', 'Explained Variance Score: -0.0865395211451272', 'Mean Squared Log Error (MSLE): 3.6969261854177784', 'Median Absolute Error (MedAE): 0.0', 'Max Error: 16915.101562', 'Mean: 0.38597127211990223', 'Median: 0.0', 'Standard Deviation: 47.59909379644986', 'Minimum: 0.0', 'Maximum: 16915.101562', 'Count: 156861']\nMetrics saved to /groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_one_month_15_layers//20210714/metrics_20210716_predicted.txt\npredicting:  20210717\nRead from original folder for current date: 20210717\ncurrent_start_dt is: 2021-07-14 00:00:00\nreading past files for 2021-07-16 00:00:00\nreading from predicted folder\nreading past files for 2021-07-15 00:00:00\nreading from predicted folder\nreading past files for 2021-07-14 00:00:00\nreading from predicted folder\nreading past files for 2021-07-13 00:00:00\nreading from original folder\nreading past files for 2021-07-12 00:00:00\nreading from original folder\nreading past files for 2021-07-11 00:00:00\nreading from original folder\nreading past files for 2021-07-10 00:00:00\nreading from original folder\n['Mean Absolute Error (MAE): 8.488292340988215', 'Mean Squared Error (MSE): 2922.1157995781377', 'Root Mean Squared Error (RMSE): 54.056598113256605', 'R-squared (R2) Score: -0.09113168668418781', 'Explained Variance Score: -0.06950282564976962', 'Mean Squared Log Error (MSLE): 3.453179602573972', 'Median Absolute Error (MedAE): 0.0', 'Max Error: 15969.007812', 'Mean: 0.45815916447683025', 'Median: 0.0', 'Standard Deviation: 51.75013792081203', 'Minimum: 0.0', 'Maximum: 15969.007812', 'Count: 156861']\nMetrics saved to /groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_one_month_15_layers//20210714/metrics_20210717_predicted.txt\npredicting:  20210718\nRead from original folder for current date: 20210718\ncurrent_start_dt is: 2021-07-14 00:00:00\nreading past files for 2021-07-17 00:00:00\nreading from predicted folder\nreading past files for 2021-07-16 00:00:00\nreading from predicted folder\nreading past files for 2021-07-15 00:00:00\nreading from predicted folder\nreading past files for 2021-07-14 00:00:00\nreading from predicted folder\nreading past files for 2021-07-13 00:00:00\nreading from original folder\nreading past files for 2021-07-12 00:00:00\nreading from original folder\nreading past files for 2021-07-11 00:00:00\nreading from original folder\n['Mean Absolute Error (MAE): 7.881611900511542', 'Mean Squared Error (MSE): 3955.93768610757', 'Root Mean Squared Error (RMSE): 62.89624540548959', 'R-squared (R2) Score: -0.052414456647409846', 'Explained Variance Score: -0.041160858054917426', 'Mean Squared Log Error (MSLE): 3.1449408894637996', 'Median Absolute Error (MedAE): 0.0', 'Max Error: 13462.403381285156', 'Mean: 0.7132855446223089', 'Median: 0.0', 'Standard Deviation: 61.31019574760577', 'Minimum: 0.0', 'Maximum: 13514.680664', 'Count: 156861']\nMetrics saved to /groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_one_month_15_layers//20210714/metrics_20210718_predicted.txt\npredicting:  20210719\nRead from original folder for current date: 20210719\ncurrent_start_dt is: 2021-07-14 00:00:00\nreading past files for 2021-07-18 00:00:00\nreading from predicted folder\nreading past files for 2021-07-17 00:00:00\nreading from predicted folder\nreading past files for 2021-07-16 00:00:00\nreading from predicted folder\nreading past files for 2021-07-15 00:00:00\nreading from predicted folder\nreading past files for 2021-07-14 00:00:00\nreading from predicted folder\nreading past files for 2021-07-13 00:00:00\nreading from original folder\nreading past files for 2021-07-12 00:00:00\nreading from original folder\n['Mean Absolute Error (MAE): 7.338707061463987', 'Mean Squared Error (MSE): 1612.2692873350945', 'Root Mean Squared Error (RMSE): 40.153073199135015', 'R-squared (R2) Score: -0.140665021809125', 'Explained Variance Score: -0.11127109050780959', 'Mean Squared Log Error (MSLE): 3.000556934753085', 'Median Absolute Error (MedAE): 0.0', 'Max Error: 8387.192383', 'Mean: 0.46430615542422926', 'Median: 0.0', 'Standard Deviation: 37.59595427576498', 'Minimum: 0.0', 'Maximum: 8387.192383', 'Count: 156861']\nMetrics saved to /groups/ESS3/zsun/firecasting/data/output/output_xgboost_2020_one_month_15_layers//20210714/metrics_20210719_predicted.txt\npredicting:  20210720\nRead from original folder for current date: 20210720\ncurrent_start_dt is: 2021-07-14 00:00:00\nreading past files for 2021-07-19 00:00:00\nreading from predicted folder\nreading past files for 2021-07-18 00:00:00\nreading from predicted folder\nreading past files for 2021-07-17 00:00:00\nreading from predicted folder\nreading past files for 2021-07-16 00:00:00\nreading from predicted folder\nreading past files for 2021-07-15 00:00:00\nreading from predicted folder\n\nStream closed",
  "history_begin_time" : 1697227853015,
  "history_end_time" : 1697227868788,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : null,
  "indicator" : "Failed"
},{
  "history_id" : "9zcpvzz4w42",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1709444687345,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "k1deg2k762x",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1709930509956,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "ei9k0urbglo",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1711136662810,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "c54mcah2l7t",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1711723321971,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "75znmsokal2",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1712452749959,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "2a87lhv775c",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1716068760864,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "byd0nxtevox",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1716076012588,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "382341x5wtp",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1716610196711,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "hgcrbjud30v",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1716611579208,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "0pyid5ub6kh",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1716612551153,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "zmjqrme8vzv",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1717182961372,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5drpz0ijxo3",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1717233634229,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},{
  "history_id" : "5jbrt6znbyr",
  "history_input" : null,
  "history_output" : null,
  "history_begin_time" : null,
  "history_end_time" : 1720814717255,
  "history_notes" : null,
  "history_process" : "dp0hiw",
  "host_id" : "100001",
  "indicator" : "Stopped"
},]
